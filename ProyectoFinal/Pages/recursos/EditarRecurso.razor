@page "/recursos/EditarRecurso/{id:int}"
@using ProyectoFinal.Data
@inject RecursoService RecursoService
@inject UsuarioService UsuarioService 
@inject NavigationManager navigation
@using Model;

<h3>@mensaje</h3>

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <form>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label>Recurso</label>
                <InputText @bind-Value="Modelo.Nombre" type="text" class="form-control" placeholder="Nombre del recurso" />
            </div>
            <div class="form-group col-md-6">
                <label>Usuario</label>
                <InputSelect @bind-Value="Id_User" type="text" class="form-control">
                    <option value="0">Elija un usuario</option>
                    @foreach (var item in usuarios)
                    {
                        <option value="@item.Id_User">@item.User</option>
                    }
                </InputSelect>
            </div>
        </div>
    </form>
    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {

    [Parameter]
    public int Id { get; set; }

    public Recurso Modelo { get; set; } = new Recurso();
    public string mensaje;
    public string Id_User { get; set; }
    private List<Usuario> usuarios = new List<Usuario>();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Modelo = await RecursoService.Get(Id);
            Id_User = Modelo.UsuarioId.ToString();
            mensaje = "Editar Recurso";

        }
        else
        {
            Modelo = new Recurso();
            mensaje = "Nuevo Recurso";
        }

        usuarios = await UsuarioService.GetAll();

    }


    private async void Guardar()
    {
        Modelo.UsuarioId = int.Parse(Id_User);
        await RecursoService.Save(Modelo);
        navigation.NavigateTo("recursos/ListadoRecursos");
    }

}
