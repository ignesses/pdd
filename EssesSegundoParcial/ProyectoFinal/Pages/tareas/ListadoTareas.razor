@page "/tareas/listadoTareas"
@using ProyectoFinal.Data
@inject TareaService TareaService
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime
@using Model

<h1>Listado de Tareas</h1>

<button class="btn btn-success mb-2" @onclick="()=>Editar(0)">Nuevo</button>

@if (tareas == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr class="text-center">
                <th scope="col">Id</th>
                <th scope="col">Titulo</th>
                <th scope="col">Vencimiento</th>
                <th scope="col">Estimacion</th>
                <th scope="col">Recurso</th>
                <th scope="col">Estado</th>
                <th scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tarea in tareas)
            {
            <tr class="text-center">
                <td scope="row">@tarea.Id_Tarea</td>
                <td scope="row">@tarea.Titulo</td>
                <td scope="row">@tarea.Vencimiento</td>
                <td scope="row">@tarea.Estimacion</td>
                <td scope="row">@tarea.Recurso.Nombre</td>
                <td scope="row">@tarea.Estado</td>
                <td scope="row"><button class="btn btn-info btn-sm" @onclick="()=>Editar(tarea.Id_Tarea)"><i class="fas fa-edit"></i></button> <button class="btn btn-danger btn-sm" @onclick="()=>Borrar(tarea.Id_Tarea)"><i class="far fa-trash-alt"></i></button></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Tarea> tareas;

    protected override async Task OnInitializedAsync()
    {
        tareas = await TareaService.GetAll();
    }

    protected void Editar(int id)
    {
        navigation.NavigateTo("tareas/editarTarea/" + id);
    }

    async Task Borrar(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "¿Desea eliminar la tarea seleccionada?");
        if (confirmed)
        {
            //await TareaService.Remove(id);
            await TareaService.BorrarTarea(id);
            tareas = await TareaService.GetAll();
        }
    }

}